#!/usr/bin/env php
<?php
/**
 * JBZoo TeamcityKeyKeeper
 *
 * This file is part of the JBZoo CCK package.
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * @package    TeamcityKeyKeeper
 * @license    MIT
 * @copyright  Copyright (C) JBZoo.com, All rights reserved.
 * @link       https://github.com/JBZoo/TeamcityKeyKeeper
 */

use JBZoo\TeamcityKeyKeeper\KeyGetCommand;
use JBZoo\TeamcityKeyKeeper\KeyRestoreCommand;
use JBZoo\TeamcityKeyKeeper\KeySaveCommand;
use JBZoo\TeamcityKeyKeeper\QbUpdateCommand;
use JBZoo\Utils\Sys;
use Symfony\Component\Console\Application;

umask(0000);
set_time_limit(0);

define('PATH_ROOT', dirname(__DIR__) . '/');
require_once PATH_ROOT . '/vendor/autoload.php';

if ($homePath = Sys::getHome()) {
    define('PATH_STORAGE_DEFAULT', $homePath . '/.teamcity-keykeeper');
} else {
    define('PATH_STORAGE_DEFAULT', PATH_ROOT . '/storage');
}

if (!is_dir(PATH_STORAGE_DEFAULT) &&
    !mkdir($concurrentDirectory = PATH_STORAGE_DEFAULT, 0777, true) &&
    !is_dir($concurrentDirectory)
) {
    throw new \RuntimeException(sprintf('Directory "%s" was not created', $concurrentDirectory));
}

$application = new Application();
$application->add(new KeySaveCommand());
$application->add(new KeyRestoreCommand());
$application->add(new KeyGetCommand());
$application->add(new QbUpdateCommand());
$application->run();
